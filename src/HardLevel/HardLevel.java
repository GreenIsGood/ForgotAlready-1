package HardLevel;


import ExitTheGame.ExitTheGame;
import Home.Home;
import Losing.Losing;
import MediumLevel.MediumLevel;
import Pause.Pause;
import WinningHard.WinningHard;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.net.URL;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.sampled.Clip;
import javax.swing.ImageIcon;
import javax.swing.JButton;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Ahmed
 */
public class HardLevel extends javax.swing.JFrame {

    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	public static HardLevel frame = new HardLevel();
    private final ExitTheGame back = new ExitTheGame();
    private final Pause pause = new Pause();
    public static URL[] photos;
    public static URL hidden;
    public static URL[] clocks;
    public static URL[] numbers;
    public static URL[] lastClocks;
    public static URL[] lastNumbers;
    private static int[] x;
    private boolean isOpen = false;
    private int noOpen = -1;
    private JButton whatOpen = null;
    private static ArrayList<Integer> indexs;
    private int count = 0;
    private static int score;
    private static PrintWriter output = null;
    private static Scanner scannerHard = null;
    private static int scoreFile = 0;
    /**
     * Creates new form Level3
     */
    public HardLevel() {
        x = new int[32];
        indexs = Create1(16);
        score = 99;
        HardLevel.lastNumbers = new URL[]{getClass().getResource("/Timer/last ten sec/n0-danger.png"), getClass().getResource("/Timer/last ten sec/n1-danger.png"), getClass().getResource("/Timer/last ten sec/n2-danger.png"), getClass().getResource("/Timer/last ten sec/n3-danger.png"), getClass().getResource("/Timer/last ten sec/n4-danger.png"), getClass().getResource("/Timer/last ten sec/n5-danger.png"), getClass().getResource("/Timer/last ten sec/n6-danger.png"), getClass().getResource("/Timer/last ten sec/n7--danger.png"), getClass().getResource("/Timer/last ten sec/n8-danger.png"), getClass().getResource("/Timer/last ten sec/n9-danger.png")};
        HardLevel.lastClocks = new URL[]{getClass().getResource("/Timer/last ten sec/1.png"), getClass().getResource("/Timer/last ten sec/2.png"), getClass().getResource("/Timer/last ten sec/3.png"), getClass().getResource("/Timer/last ten sec/4.png")};
        HardLevel.numbers = new URL[]{getClass().getResource("/Timer/n0.png"), getClass().getResource("/Timer/n1.png"), getClass().getResource("/Timer/n2.png"), getClass().getResource("/Timer/n3.png"), getClass().getResource("/Timer/n4.png"), getClass().getResource("/Timer/n5.png"), getClass().getResource("/Timer/n6.png"), getClass().getResource("/Timer/n7.png"), getClass().getResource("/Timer/n8.png"), getClass().getResource("/Timer/n9.png")};
        HardLevel.clocks = new URL[]{getClass().getResource("/Timer/1.png"), getClass().getResource("/Timer/2.png"), getClass().getResource("/Timer/3.png"), getClass().getResource("/Timer/4.png")};
        HardLevel.hidden = getClass().getResource("/HardLevel/hidden.png");
        HardLevel.photos = new URL[]{getClass().getResource("/HardLevel/1.png"), getClass().getResource("/HardLevel/2.png"), getClass().getResource("/HardLevel/3.png"), getClass().getResource("/HardLevel/4.png"), getClass().getResource("/HardLevel/5.png"), getClass().getResource("/HardLevel/6.png"), getClass().getResource("/HardLevel/7.png"), getClass().getResource("/HardLevel/8.png"), getClass().getResource("/HardLevel/9.png"), getClass().getResource("/HardLevel/10.png"), getClass().getResource("/HardLevel/11.png"), getClass().getResource("/HardLevel/12.png"), getClass().getResource("/HardLevel/13.png"), getClass().getResource("/HardLevel/14.png"), getClass().getResource("/HardLevel/15.png"), getClass().getResource("/HardLevel/16.png")};
        initComponents();
    }
    
    public static ArrayList<Integer> Create1(int n){
        ArrayList<Integer> A  = new ArrayList<Integer>();
        int k=1;
        for(int i=0;i<n*2;i++){
            if(i%2==0&&i!=0)
                k++;
            A.add(k);
        }
        
        ArrayList<Integer> b = new ArrayList<Integer>();
        for(int i=0;i<2*n;i++){
            int o=A.size()-1;
            int a=(int) (Math.random()*o);
            b.add(A.get(a));
            A.remove(a);
        }
        return b;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Button29 = new javax.swing.JButton();
        Button10 = new javax.swing.JButton();
        Button19 = new javax.swing.JButton();
        Button24 = new javax.swing.JButton();
        Button27 = new javax.swing.JButton();
        Button6 = new javax.swing.JButton();
        Button30 = new javax.swing.JButton();
        Button12 = new javax.swing.JButton();
        Button18 = new javax.swing.JButton();
        Button4 = new javax.swing.JButton();
        Button9 = new javax.swing.JButton();
        Button2 = new javax.swing.JButton();
        Button5 = new javax.swing.JButton();
        Button13 = new javax.swing.JButton();
        Button26 = new javax.swing.JButton();
        Button28 = new javax.swing.JButton();
        Button1 = new javax.swing.JButton();
        Button15 = new javax.swing.JButton();
        Button16 = new javax.swing.JButton();
        Button20 = new javax.swing.JButton();
        Button32 = new javax.swing.JButton();
        Button11 = new javax.swing.JButton();
        Button7 = new javax.swing.JButton();
        Button23 = new javax.swing.JButton();
        Button31 = new javax.swing.JButton();
        Button25 = new javax.swing.JButton();
        Button17 = new javax.swing.JButton();
        Button3 = new javax.swing.JButton();
        Button22 = new javax.swing.JButton();
        Button14 = new javax.swing.JButton();
        Button8 = new javax.swing.JButton();
        Button21 = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        sound = new javax.swing.JButton();
        pauseButton = new javax.swing.JButton();
        digit1 = new javax.swing.JButton();
        digit0 = new javax.swing.JButton();
        clock = new javax.swing.JButton();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(null);

        Button29.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HardLevel/hidden.png"))); // NOI18N
        Button29.setBorderPainted(false);
        Button29.setContentAreaFilled(false);
        Button29.setFocusPainted(false);
        Button29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button29ActionPerformed(evt);
            }
        });
        getContentPane().add(Button29);
        Button29.setBounds(480, 590, 120, 120);

        Button10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HardLevel/hidden.png"))); // NOI18N
        Button10.setBorderPainted(false);
        Button10.setContentAreaFilled(false);
        Button10.setFocusPainted(false);
        Button10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button10ActionPerformed(evt);
            }
        });
        getContentPane().add(Button10);
        Button10.setBounds(480, 200, 120, 120);

        Button19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HardLevel/hidden.png"))); // NOI18N
        Button19.setBorderPainted(false);
        Button19.setContentAreaFilled(false);
        Button19.setFocusPainted(false);
        Button19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button19ActionPerformed(evt);
            }
        });
        getContentPane().add(Button19);
        Button19.setBounds(90, 460, 120, 120);

        Button24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HardLevel/hidden.png"))); // NOI18N
        Button24.setBorderPainted(false);
        Button24.setContentAreaFilled(false);
        Button24.setFocusPainted(false);
        Button24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button24ActionPerformed(evt);
            }
        });
        getContentPane().add(Button24);
        Button24.setBounds(740, 460, 120, 120);

        Button27.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HardLevel/hidden.png"))); // NOI18N
        Button27.setBorderPainted(false);
        Button27.setContentAreaFilled(false);
        Button27.setFocusPainted(false);
        Button27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button27ActionPerformed(evt);
            }
        });
        getContentPane().add(Button27);
        Button27.setBounds(220, 590, 120, 120);

        Button6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HardLevel/hidden.png"))); // NOI18N
        Button6.setBorderPainted(false);
        Button6.setContentAreaFilled(false);
        Button6.setFocusPainted(false);
        Button6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button6ActionPerformed(evt);
            }
        });
        getContentPane().add(Button6);
        Button6.setBounds(740, 70, 120, 120);

        Button30.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HardLevel/hidden.png"))); // NOI18N
        Button30.setBorderPainted(false);
        Button30.setContentAreaFilled(false);
        Button30.setFocusPainted(false);
        Button30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button30ActionPerformed(evt);
            }
        });
        getContentPane().add(Button30);
        Button30.setBounds(610, 590, 120, 120);

        Button12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HardLevel/hidden.png"))); // NOI18N
        Button12.setBorderPainted(false);
        Button12.setContentAreaFilled(false);
        Button12.setFocusPainted(false);
        Button12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button12ActionPerformed(evt);
            }
        });
        getContentPane().add(Button12);
        Button12.setBounds(740, 200, 120, 120);

        Button18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HardLevel/hidden.png"))); // NOI18N
        Button18.setBorderPainted(false);
        Button18.setContentAreaFilled(false);
        Button18.setFocusPainted(false);
        Button18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button18ActionPerformed(evt);
            }
        });
        getContentPane().add(Button18);
        Button18.setBounds(740, 330, 120, 120);

        Button4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HardLevel/hidden.png"))); // NOI18N
        Button4.setBorderPainted(false);
        Button4.setContentAreaFilled(false);
        Button4.setFocusPainted(false);
        Button4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button4ActionPerformed(evt);
            }
        });
        getContentPane().add(Button4);
        Button4.setBounds(480, 70, 120, 120);

        Button9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HardLevel/hidden.png"))); // NOI18N
        Button9.setBorderPainted(false);
        Button9.setContentAreaFilled(false);
        Button9.setFocusPainted(false);
        Button9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button9ActionPerformed(evt);
            }
        });
        getContentPane().add(Button9);
        Button9.setBounds(350, 200, 120, 120);

        Button2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HardLevel/hidden.png"))); // NOI18N
        Button2.setBorderPainted(false);
        Button2.setContentAreaFilled(false);
        Button2.setFocusPainted(false);
        Button2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button2ActionPerformed(evt);
            }
        });
        getContentPane().add(Button2);
        Button2.setBounds(220, 70, 120, 120);

        Button5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HardLevel/hidden.png"))); // NOI18N
        Button5.setBorderPainted(false);
        Button5.setContentAreaFilled(false);
        Button5.setFocusPainted(false);
        Button5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button5ActionPerformed(evt);
            }
        });
        getContentPane().add(Button5);
        Button5.setBounds(610, 70, 120, 120);

        Button13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HardLevel/hidden.png"))); // NOI18N
        Button13.setBorderPainted(false);
        Button13.setContentAreaFilled(false);
        Button13.setFocusPainted(false);
        Button13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button13ActionPerformed(evt);
            }
        });
        getContentPane().add(Button13);
        Button13.setBounds(90, 330, 120, 120);

        Button26.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HardLevel/hidden.png"))); // NOI18N
        Button26.setBorderPainted(false);
        Button26.setContentAreaFilled(false);
        Button26.setFocusPainted(false);
        Button26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button26ActionPerformed(evt);
            }
        });
        getContentPane().add(Button26);
        Button26.setBounds(90, 590, 120, 120);

        Button28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HardLevel/hidden.png"))); // NOI18N
        Button28.setBorderPainted(false);
        Button28.setContentAreaFilled(false);
        Button28.setFocusPainted(false);
        Button28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button28ActionPerformed(evt);
            }
        });
        getContentPane().add(Button28);
        Button28.setBounds(350, 590, 120, 120);

        Button1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HardLevel/hidden.png"))); // NOI18N
        Button1.setBorderPainted(false);
        Button1.setContentAreaFilled(false);
        Button1.setFocusPainted(false);
        Button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button1ActionPerformed(evt);
            }
        });
        getContentPane().add(Button1);
        Button1.setBounds(90, 70, 120, 120);

        Button15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HardLevel/hidden.png"))); // NOI18N
        Button15.setBorderPainted(false);
        Button15.setContentAreaFilled(false);
        Button15.setFocusPainted(false);
        Button15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button15ActionPerformed(evt);
            }
        });
        getContentPane().add(Button15);
        Button15.setBounds(350, 330, 120, 120);

        Button16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HardLevel/hidden.png"))); // NOI18N
        Button16.setBorderPainted(false);
        Button16.setContentAreaFilled(false);
        Button16.setFocusPainted(false);
        Button16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button16ActionPerformed(evt);
            }
        });
        getContentPane().add(Button16);
        Button16.setBounds(480, 330, 120, 120);

        Button20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HardLevel/hidden.png"))); // NOI18N
        Button20.setBorderPainted(false);
        Button20.setContentAreaFilled(false);
        Button20.setFocusPainted(false);
        Button20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button20ActionPerformed(evt);
            }
        });
        getContentPane().add(Button20);
        Button20.setBounds(220, 460, 120, 120);

        Button32.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HardLevel/hidden.png"))); // NOI18N
        Button32.setBorderPainted(false);
        Button32.setContentAreaFilled(false);
        Button32.setFocusPainted(false);
        Button32.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button32ActionPerformed(evt);
            }
        });
        getContentPane().add(Button32);
        Button32.setBounds(870, 590, 120, 120);

        Button11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HardLevel/hidden.png"))); // NOI18N
        Button11.setBorderPainted(false);
        Button11.setContentAreaFilled(false);
        Button11.setFocusPainted(false);
        Button11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button11ActionPerformed(evt);
            }
        });
        getContentPane().add(Button11);
        Button11.setBounds(610, 200, 120, 120);

        Button7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HardLevel/hidden.png"))); // NOI18N
        Button7.setBorderPainted(false);
        Button7.setContentAreaFilled(false);
        Button7.setFocusPainted(false);
        Button7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button7ActionPerformed(evt);
            }
        });
        getContentPane().add(Button7);
        Button7.setBounds(90, 200, 120, 120);

        Button23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HardLevel/hidden.png"))); // NOI18N
        Button23.setBorderPainted(false);
        Button23.setContentAreaFilled(false);
        Button23.setFocusPainted(false);
        Button23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button23ActionPerformed(evt);
            }
        });
        getContentPane().add(Button23);
        Button23.setBounds(610, 460, 120, 120);

        Button31.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HardLevel/hidden.png"))); // NOI18N
        Button31.setBorderPainted(false);
        Button31.setContentAreaFilled(false);
        Button31.setFocusPainted(false);
        Button31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button31ActionPerformed(evt);
            }
        });
        getContentPane().add(Button31);
        Button31.setBounds(740, 590, 120, 120);

        Button25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HardLevel/hidden.png"))); // NOI18N
        Button25.setBorderPainted(false);
        Button25.setContentAreaFilled(false);
        Button25.setFocusPainted(false);
        Button25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button25ActionPerformed(evt);
            }
        });
        getContentPane().add(Button25);
        Button25.setBounds(870, 460, 120, 120);

        Button17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HardLevel/hidden.png"))); // NOI18N
        Button17.setBorderPainted(false);
        Button17.setContentAreaFilled(false);
        Button17.setFocusPainted(false);
        Button17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button17ActionPerformed(evt);
            }
        });
        getContentPane().add(Button17);
        Button17.setBounds(610, 330, 120, 120);

        Button3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HardLevel/hidden.png"))); // NOI18N
        Button3.setBorderPainted(false);
        Button3.setContentAreaFilled(false);
        Button3.setFocusPainted(false);
        Button3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button3ActionPerformed(evt);
            }
        });
        getContentPane().add(Button3);
        Button3.setBounds(350, 70, 120, 120);

        Button22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HardLevel/hidden.png"))); // NOI18N
        Button22.setBorderPainted(false);
        Button22.setContentAreaFilled(false);
        Button22.setFocusPainted(false);
        Button22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button22ActionPerformed(evt);
            }
        });
        getContentPane().add(Button22);
        Button22.setBounds(480, 460, 120, 120);

        Button14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HardLevel/hidden.png"))); // NOI18N
        Button14.setBorderPainted(false);
        Button14.setContentAreaFilled(false);
        Button14.setFocusPainted(false);
        Button14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button14ActionPerformed(evt);
            }
        });
        getContentPane().add(Button14);
        Button14.setBounds(220, 330, 120, 120);

        Button8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HardLevel/hidden.png"))); // NOI18N
        Button8.setBorderPainted(false);
        Button8.setContentAreaFilled(false);
        Button8.setFocusPainted(false);
        Button8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button8ActionPerformed(evt);
            }
        });
        getContentPane().add(Button8);
        Button8.setBounds(220, 200, 120, 120);

        Button21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HardLevel/hidden.png"))); // NOI18N
        Button21.setBorderPainted(false);
        Button21.setContentAreaFilled(false);
        Button21.setFocusPainted(false);
        Button21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button21ActionPerformed(evt);
            }
        });
        getContentPane().add(Button21);
        Button21.setBounds(350, 460, 120, 120);

        backButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ExitTheGame/exit.png"))); // NOI18N
        backButton.setBorderPainted(false);
        backButton.setContentAreaFilled(false);
        backButton.setFocusPainted(false);
        backButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                backButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                backButtonMouseExited(evt);
            }
        });
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        getContentPane().add(backButton);
        backButton.setBounds(0, 0, 100, 100);

        sound.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Sound/on(1).png"))); // NOI18N
        sound.setBorderPainted(false);
        sound.setContentAreaFilled(false);
        sound.setFocusPainted(false);
        sound.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                soundActionPerformed(evt);
            }
        });
        getContentPane().add(sound);
        sound.setBounds(1270, 0, 90, 100);

        pauseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pause/pause.png"))); // NOI18N
        pauseButton.setBorderPainted(false);
        pauseButton.setContentAreaFilled(false);
        pauseButton.setFocusPainted(false);
        pauseButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pauseButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pauseButtonMouseExited(evt);
            }
        });
        pauseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pauseButtonActionPerformed(evt);
            }
        });
        getContentPane().add(pauseButton);
        pauseButton.setBounds(1220, 650, 80, 80);

        digit1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Timer/n0.png"))); // NOI18N
        digit1.setBorderPainted(false);
        digit1.setFocusPainted(false);
        getContentPane().add(digit1);
        digit1.setBounds(1020, 70, 102, 170);

        digit0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Timer/n0.png"))); // NOI18N
        digit0.setBorderPainted(false);
        digit0.setFocusPainted(false);
        getContentPane().add(digit0);
        digit0.setBounds(1120, 70, 102, 170);

        clock.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Timer/1.png"))); // NOI18N
        clock.setBorderPainted(false);
        clock.setContentAreaFilled(false);
        clock.setDefaultCapable(false);
        clock.setFocusPainted(false);
        getContentPane().add(clock);
        clock.setBounds(910, 230, 150, 220);

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HardLevel/bachground.png"))); // NOI18N
        background.setLabelFor(background);
        getContentPane().add(background);
        background.setBounds(0, 0, 1370, 770);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backButtonMouseEntered
        ImageIcon image = new ImageIcon(getClass().getResource("/ExitTheGame/exit-clicked.png"));
        backButton.setIcon(image);
    }//GEN-LAST:event_backButtonMouseEntered

    private void backButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backButtonMouseExited
        ImageIcon image = new ImageIcon(getClass().getResource("/ExitTheGame/exit.png"));
        backButton.setIcon(image);
    }//GEN-LAST:event_backButtonMouseExited

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        Home.audioClip1.loop(1);
        Home.audioClip1.start();
        back.setTitle("Memory Game");
        back.setSize(600, 446);
        back.setVisible(true);
        back.setLocationRelativeTo(null);
        back.setResizable(false);
        frame.setEnabled(false);
        ExitTheGame.from = "Level3";
    }//GEN-LAST:event_backButtonActionPerformed

    public static void setIt(){
        frame.setEnabled(true);
    }
    
    private void soundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_soundActionPerformed
        Home.audioClip1.loop(1);
        Home.audioClip1.start();
        if(!Home.mute){
            ImageIcon image = new ImageIcon(getClass().getResource("/Sound/mute(1).png"));
            sound.setIcon(image);
            Home.audioClip.stop();
            Home.mute = true;
        }
        else{
            ImageIcon image = new ImageIcon(getClass().getResource("/Sound/on(1).png"));
            sound.setIcon(image);
            Home.audioClip.loop(Clip.LOOP_CONTINUOUSLY);
            Home.audioClip.start();
            Home.mute = false;
        }
    }//GEN-LAST:event_soundActionPerformed

    private void pauseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pauseButtonActionPerformed
        Home.audioClip1.loop(1);
        Home.audioClip1.start();
        Pause.background.setIcon(new ImageIcon(getClass().getResource("/Pause/paused-bachground-hard.png")));
        pause.setTitle("Memory Game");
        pause.setSize(1366, 768);
        pause.setVisible(true);
        pause.setLocationRelativeTo(null);
        pause.setResizable(false);
        frame.setEnabled(false);
        Pause.from = "Level3";
    }//GEN-LAST:event_pauseButtonActionPerformed

    private void pauseButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pauseButtonMouseEntered
        ImageIcon image = new ImageIcon(getClass().getResource("/Pause/pause-clicked.png"));
        pauseButton.setIcon(image);
    }//GEN-LAST:event_pauseButtonMouseEntered

    private void pauseButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pauseButtonMouseExited
        ImageIcon image = new ImageIcon(getClass().getResource("/Pause/pause.png"));
        pauseButton.setIcon(image);
    }//GEN-LAST:event_pauseButtonMouseExited

    private void Button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button1ActionPerformed
        if(whatOpen != Button1){
            Button1.setIcon(new ImageIcon(photos[x[0]]));
            frame.update(getGraphics());
            time(500);
            if(isOpen){
                if(noOpen == x[0]){
                    Home.audioClip3.loop(1);
                    Home.audioClip3.start();
                    whatOpen.setVisible(false);
                    Button1.setVisible(false);
                    count += 2;
                    if(count == 32){
                        Home.audioClip2.loop(1);
                        Home.audioClip2.start();
                        WinningHard.score.setText(String.valueOf(score*score*score));
                        WinningHard.main(null);
                        frame.setVisible(false);
                        if((score*score*score) > scoreFile){
                            try {
                                output = new PrintWriter(Home.scoreHard);
                            } catch (FileNotFoundException ex) {
                                Logger.getLogger(HardLevel.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            output.print(score*score*score);
                            output.close();
                        }
                    }
                }
                else{
                    whatOpen.setIcon(new ImageIcon(hidden));
                    Button1.setIcon(new ImageIcon(hidden)); 
                }
                whatOpen = null;
                isOpen = false;
                noOpen = -1;
            }
            else{
                isOpen = true;
                noOpen = x[0];
                whatOpen = Button1;
            }
        }
    }//GEN-LAST:event_Button1ActionPerformed

    private void Button2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button2ActionPerformed
        if(whatOpen != Button2){
            Button2.setIcon(new ImageIcon(photos[x[1]]));
            frame.update(getGraphics());
            time(500);
            if(isOpen){
                    Home.audioClip3.loop(1);
                    Home.audioClip3.start();
                if(noOpen == x[1]){
                    whatOpen.setVisible(false);
                    Button2.setVisible(false);
                    count += 2;
                    if(count == 32){
                        Home.audioClip2.loop(1);
                        Home.audioClip2.start();
                        WinningHard.score.setText(String.valueOf(score*score*score));
                        WinningHard.main(null);
                        frame.setVisible(false);
                        if((score*score*score) > scoreFile){
                            try {
                                output = new PrintWriter(Home.scoreHard);
                            } catch (FileNotFoundException ex) {
                                Logger.getLogger(HardLevel.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            output.print(score*score*score);
                            output.close();
                        }
                    }
                }
                else{
                    whatOpen.setIcon(new ImageIcon(hidden));
                    Button2.setIcon(new ImageIcon(hidden)); 
                }
                whatOpen = null;
                isOpen = false;
                noOpen = -1;
            }
            else{
                isOpen = true;
                noOpen = x[1];
                whatOpen = Button2;
            }
        }
    }//GEN-LAST:event_Button2ActionPerformed

    private void Button3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button3ActionPerformed
        if(whatOpen != Button3){
            Button3.setIcon(new ImageIcon(photos[x[2]]));
            frame.update(getGraphics());
            time(500);
            if(isOpen){
                if(noOpen == x[2]){
                    Home.audioClip3.loop(1);
                    Home.audioClip3.start();
                    whatOpen.setVisible(false);
                    Button3.setVisible(false);
                    count += 2;
                    if(count == 32){
                        Home.audioClip2.loop(1);
                        Home.audioClip2.start();
                        WinningHard.score.setText(String.valueOf(score*score*score));
                        WinningHard.main(null);
                        frame.setVisible(false);
                        if((score*score*score) > scoreFile){
                            try {
                                output = new PrintWriter(Home.scoreHard);
                            } catch (FileNotFoundException ex) {
                                Logger.getLogger(HardLevel.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            output.print(score*score*score);
                            output.close();
                        }
                    }
                }
                else{
                    whatOpen.setIcon(new ImageIcon(hidden));
                    Button3.setIcon(new ImageIcon(hidden)); 
                }
                whatOpen = null;
                isOpen = false;
                noOpen = -1;
            }
            else{
                isOpen = true;
                noOpen = x[2];
                whatOpen = Button3;
            }
        }
    }//GEN-LAST:event_Button3ActionPerformed

    private void Button4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button4ActionPerformed
        if(whatOpen != Button4){
            Button4.setIcon(new ImageIcon(photos[x[3]]));
            frame.update(getGraphics());
            time(500);
            if(isOpen){
                if(noOpen == x[3]){
                    Home.audioClip3.loop(1);
                    Home.audioClip3.start();
                    whatOpen.setVisible(false);
                    Button4.setVisible(false);
                    count += 2;
                    if(count == 32){
                        Home.audioClip2.loop(1);
                        Home.audioClip2.start();
                        WinningHard.score.setText(String.valueOf(score*score*score));
                        WinningHard.main(null);
                        frame.setVisible(false);
                        if((score*score*score) > scoreFile){
                            try {
                                output = new PrintWriter(Home.scoreHard);
                            } catch (FileNotFoundException ex) {
                                Logger.getLogger(HardLevel.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            output.print(score*score*score);
                            output.close();
                        }
                    }
                }
                else{
                    whatOpen.setIcon(new ImageIcon(hidden));
                    Button4.setIcon(new ImageIcon(hidden)); 
                }
                whatOpen = null;
                isOpen = false;
                noOpen = -1;
            }
            else{
                isOpen = true;
                noOpen = x[3];
                whatOpen = Button4;
            }
        }
    }//GEN-LAST:event_Button4ActionPerformed

    private void Button5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button5ActionPerformed
        if(whatOpen != Button5){
            Button5.setIcon(new ImageIcon(photos[x[4]]));
            frame.update(getGraphics());
            time(500);
            if(isOpen){
                if(noOpen == x[4]){
                    Home.audioClip3.loop(1);
                    Home.audioClip3.start();
                    whatOpen.setVisible(false);
                    Button5.setVisible(false);
                    count += 2;
                    if(count == 32){
                        Home.audioClip2.loop(1);
                        Home.audioClip2.start();
                        WinningHard.score.setText(String.valueOf(score*score*score));
                        WinningHard.main(null);
                        frame.setVisible(false);
                        if((score*score*score) > scoreFile){
                            try {
                                output = new PrintWriter(Home.scoreHard);
                            } catch (FileNotFoundException ex) {
                                Logger.getLogger(HardLevel.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            output.print(score*score*score);
                            output.close();
                        }
                    }
                }
                else{
                    whatOpen.setIcon(new ImageIcon(hidden));
                    Button5.setIcon(new ImageIcon(hidden)); 
                }
                whatOpen = null;
                isOpen = false;
                noOpen = -1;
            }
            else{
                isOpen = true;
                noOpen = x[4];
                whatOpen = Button5;
            }
        }
    }//GEN-LAST:event_Button5ActionPerformed

    private void Button6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button6ActionPerformed
        if(whatOpen != Button6){
            Button6.setIcon(new ImageIcon(photos[x[5]]));
            frame.update(getGraphics());
            time(500);
            if(isOpen){
                if(noOpen == x[5]){
                    Home.audioClip3.loop(1);
                    Home.audioClip3.start();
                    whatOpen.setVisible(false);
                    Button6.setVisible(false);
                    count += 2;
                    if(count == 32){
                        Home.audioClip2.loop(1);
                        Home.audioClip2.start();
                        WinningHard.score.setText(String.valueOf(score*score*score));
                        WinningHard.main(null);
                        frame.setVisible(false);
                        if((score*score*score) > scoreFile){
                            try {
                                output = new PrintWriter(Home.scoreHard);
                            } catch (FileNotFoundException ex) {
                                Logger.getLogger(HardLevel.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            output.print(score*score*score);
                            output.close();
                        }
                    }
                }
                else{
                    whatOpen.setIcon(new ImageIcon(hidden));
                    Button6.setIcon(new ImageIcon(hidden)); 
                }
                whatOpen = null;
                isOpen = false;
                noOpen = -1;
            }
            else{
                isOpen = true;
                noOpen = x[5];
                whatOpen = Button6;
            }
        }
    }//GEN-LAST:event_Button6ActionPerformed

    private void Button7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button7ActionPerformed
        if(whatOpen != Button7){
            Button7.setIcon(new ImageIcon(photos[x[6]]));
            frame.update(getGraphics());
            time(500);
            if(isOpen){
                if(noOpen == x[6]){
                    Home.audioClip3.loop(1);
                    Home.audioClip3.start();
                    whatOpen.setVisible(false);
                    Button7.setVisible(false);
                    count += 2;
                    if(count == 32){
                        Home.audioClip2.loop(1);
                        Home.audioClip2.start();
                        WinningHard.score.setText(String.valueOf(score*score*score));
                        WinningHard.main(null);
                        frame.setVisible(false);
                        if((score*score*score) > scoreFile){
                            try {
                                output = new PrintWriter(Home.scoreHard);
                            } catch (FileNotFoundException ex) {
                                Logger.getLogger(HardLevel.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            output.print(score*score*score);
                            output.close();
                        }
                    }
                }
                else{
                    whatOpen.setIcon(new ImageIcon(hidden));
                    Button7.setIcon(new ImageIcon(hidden)); 
                }
                whatOpen = null;
                isOpen = false;
                noOpen = -1;
            }
            else{
                isOpen = true;
                noOpen = x[6];
                whatOpen = Button7;
            }
        }
    }//GEN-LAST:event_Button7ActionPerformed

    private void Button8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button8ActionPerformed
        if(whatOpen != Button8){
            Button8.setIcon(new ImageIcon(photos[x[7]]));
            frame.update(getGraphics());
            time(500);
            if(isOpen){
                if(noOpen == x[7]){
                    Home.audioClip3.loop(1);
                    Home.audioClip3.start();
                    whatOpen.setVisible(false);
                    Button8.setVisible(false);
                    count += 2;
                    if(count == 32){
                        Home.audioClip2.loop(1);
                        Home.audioClip2.start();
                        WinningHard.score.setText(String.valueOf(score*score*score));
                        WinningHard.main(null);
                        frame.setVisible(false);
                        if((score*score*score) > scoreFile){
                            try {
                                output = new PrintWriter(Home.scoreHard);
                            } catch (FileNotFoundException ex) {
                                Logger.getLogger(HardLevel.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            output.print(score*score*score);
                            output.close();
                        }
                    }
                }
                else{
                    whatOpen.setIcon(new ImageIcon(hidden));
                    Button8.setIcon(new ImageIcon(hidden)); 
                }
                whatOpen = null;
                isOpen = false;
                noOpen = -1;
            }
            else{
                isOpen = true;
                noOpen = x[7];
                whatOpen = Button8;
            }
        }
    }//GEN-LAST:event_Button8ActionPerformed

    private void Button9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button9ActionPerformed
        if(whatOpen != Button9){
            Button9.setIcon(new ImageIcon(photos[x[8]]));
            frame.update(getGraphics());
            time(500);
            if(isOpen){
                if(noOpen == x[8]){
                    Home.audioClip3.loop(1);
                    Home.audioClip3.start();
                    whatOpen.setVisible(false);
                    Button9.setVisible(false);
                    count += 2;
                    if(count == 32){
                        Home.audioClip2.loop(1);
                        Home.audioClip2.start();
                        WinningHard.score.setText(String.valueOf(score*score*score));
                        WinningHard.main(null);
                        frame.setVisible(false);
                        if((score*score*score) > scoreFile){
                            try {
                                output = new PrintWriter(Home.scoreHard);
                            } catch (FileNotFoundException ex) {
                                Logger.getLogger(HardLevel.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            output.print(score*score*score);
                            output.close();
                        }
                    }
                }
                else{
                    whatOpen.setIcon(new ImageIcon(hidden));
                    Button9.setIcon(new ImageIcon(hidden)); 
                }
                whatOpen = null;
                isOpen = false;
                noOpen = -1;
            }
            else{
                isOpen = true;
                noOpen = x[8];
                whatOpen = Button9;
            }
        }
    }//GEN-LAST:event_Button9ActionPerformed

    private void Button10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button10ActionPerformed
        if(whatOpen != Button10){
            Button10.setIcon(new ImageIcon(photos[x[9]]));
            frame.update(getGraphics());
            time(500);
            if(isOpen){
                if(noOpen == x[9]){
                    Home.audioClip3.loop(1);
                    Home.audioClip3.start();
                    whatOpen.setVisible(false);
                    Button10.setVisible(false);
                    count += 2;
                    if(count == 32){
                        Home.audioClip2.loop(1);
                        Home.audioClip2.start();
                        WinningHard.score.setText(String.valueOf(score*score*score));
                        WinningHard.main(null);
                        frame.setVisible(false);
                        if((score*score*score) > scoreFile){
                            try {
                                output = new PrintWriter(Home.scoreHard);
                            } catch (FileNotFoundException ex) {
                                Logger.getLogger(HardLevel.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            output.print(score*score*score);
                            output.close();
                        }
                    }
                }
                else{
                    whatOpen.setIcon(new ImageIcon(hidden));
                    Button10.setIcon(new ImageIcon(hidden)); 
                }
                whatOpen = null;
                isOpen = false;
                noOpen = -1;
            }
            else{
                isOpen = true;
                noOpen = x[9];
                whatOpen = Button10;
            }
        }
    }//GEN-LAST:event_Button10ActionPerformed

    private void Button11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button11ActionPerformed
        if(whatOpen != Button11){
            Button11.setIcon(new ImageIcon(photos[x[10]]));
            frame.update(getGraphics());
            time(500);
            if(isOpen){
                if(noOpen == x[10]){
                    Home.audioClip3.loop(1);
                    Home.audioClip3.start();
                    whatOpen.setVisible(false);
                    Button11.setVisible(false);
                    count += 2;
                    if(count == 32){
                        Home.audioClip2.loop(1);
                        Home.audioClip2.start();
                        WinningHard.score.setText(String.valueOf(score*score*score));
                        WinningHard.main(null);
                        frame.setVisible(false);
                        if((score*score*score) > scoreFile){
                            try {
                                output = new PrintWriter(Home.scoreHard);
                            } catch (FileNotFoundException ex) {
                                Logger.getLogger(HardLevel.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            output.print(score*score*score);
                            output.close();
                        }
                    }
                }
                else{
                    whatOpen.setIcon(new ImageIcon(hidden));
                    Button11.setIcon(new ImageIcon(hidden)); 
                }
                whatOpen = null;
                isOpen = false;
                noOpen = -1;
            }
            else{
                isOpen = true;
                noOpen = x[10];
                whatOpen = Button11;
            }
        }
    }//GEN-LAST:event_Button11ActionPerformed

    private void Button12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button12ActionPerformed
        if(whatOpen != Button12){
            Button12.setIcon(new ImageIcon(photos[x[11]]));
            frame.update(getGraphics());
            time(500);
            if(isOpen){
                if(noOpen == x[11]){
                    Home.audioClip3.loop(1);
                    Home.audioClip3.start();
                    whatOpen.setVisible(false);
                    Button12.setVisible(false);
                    count += 2;
                    if(count == 32){
                        Home.audioClip2.loop(1);
                        Home.audioClip2.start();
                        WinningHard.score.setText(String.valueOf(score*score*score));
                        WinningHard.main(null);
                        frame.setVisible(false);
                        if((score*score*score) > scoreFile){
                            try {
                                output = new PrintWriter(Home.scoreHard);
                            } catch (FileNotFoundException ex) {
                                Logger.getLogger(HardLevel.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            output.print(score*score*score);
                            output.close();
                        }
                    }
                }
                else{
                    whatOpen.setIcon(new ImageIcon(hidden));
                    Button12.setIcon(new ImageIcon(hidden)); 
                }
                whatOpen = null;
                isOpen = false;
                noOpen = -1;
            }
            else{
                isOpen = true;
                noOpen = x[11];
                whatOpen = Button12;
            }
        }
    }//GEN-LAST:event_Button12ActionPerformed

    private void Button13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button13ActionPerformed
        if(whatOpen != Button13){
            Button13.setIcon(new ImageIcon(photos[x[12]]));
            frame.update(getGraphics());
            time(500);
            if(isOpen){
                if(noOpen == x[12]){
                    Home.audioClip3.loop(1);
                    Home.audioClip3.start();
                    whatOpen.setVisible(false);
                    Button13.setVisible(false);
                    count += 2;
                    if(count == 32){
                        Home.audioClip2.loop(1);
                        Home.audioClip2.start();
                        WinningHard.score.setText(String.valueOf(score*score*score));
                        WinningHard.main(null);
                        frame.setVisible(false);
                        if((score*score*score) > scoreFile){
                            try {
                                output = new PrintWriter(Home.scoreHard);
                            } catch (FileNotFoundException ex) {
                                Logger.getLogger(HardLevel.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            output.print(score*score*score);
                            output.close();
                        }
                    }
                }
                else{
                    whatOpen.setIcon(new ImageIcon(hidden));
                    Button13.setIcon(new ImageIcon(hidden)); 
                }
                whatOpen = null;
                isOpen = false;
                noOpen = -1;
            }
            else{
                isOpen = true;
                noOpen = x[12];
                whatOpen = Button13;
            }
        }
    }//GEN-LAST:event_Button13ActionPerformed

    private void Button14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button14ActionPerformed
        if(whatOpen != Button14){
            Button14.setIcon(new ImageIcon(photos[x[13]]));
            frame.update(getGraphics());
            time(500);
            if(isOpen){
                if(noOpen == x[13]){
                    Home.audioClip3.loop(1);
                    Home.audioClip3.start();
                    whatOpen.setVisible(false);
                    Button14.setVisible(false);
                    count += 2;
                    if(count == 32){
                        Home.audioClip2.loop(1);
                        Home.audioClip2.start();
                        WinningHard.score.setText(String.valueOf(score*score*score));
                        WinningHard.main(null);
                        frame.setVisible(false);
                        if((score*score*score) > scoreFile){
                            try {
                                output = new PrintWriter(Home.scoreHard);
                            } catch (FileNotFoundException ex) {
                                Logger.getLogger(HardLevel.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            output.print(score*score*score);
                            output.close();
                        }
                    }
                }
                else{
                    whatOpen.setIcon(new ImageIcon(hidden));
                    Button14.setIcon(new ImageIcon(hidden)); 
                }
                whatOpen = null;
                isOpen = false;
                noOpen = -1;
            }
            else{
                isOpen = true;
                noOpen = x[13];
                whatOpen = Button14;
            }
        }
    }//GEN-LAST:event_Button14ActionPerformed

    private void Button15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button15ActionPerformed
        if(whatOpen != Button15){
            Button15.setIcon(new ImageIcon(photos[x[14]]));
            frame.update(getGraphics());
            time(500);
            if(isOpen){
                if(noOpen == x[14]){
                    Home.audioClip3.loop(1);
                    Home.audioClip3.start();
                    whatOpen.setVisible(false);
                    Button15.setVisible(false);
                    count += 2;
                    if(count == 32){
                        Home.audioClip2.loop(1);
                        Home.audioClip2.start();
                        WinningHard.score.setText(String.valueOf(score*score*score));
                        WinningHard.main(null);
                        frame.setVisible(false);
                        if((score*score*score) > scoreFile){
                            try {
                                output = new PrintWriter(Home.scoreHard);
                            } catch (FileNotFoundException ex) {
                                Logger.getLogger(HardLevel.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            output.print(score*score*score);
                            output.close();
                        }
                    }
                }
                else{
                    whatOpen.setIcon(new ImageIcon(hidden));
                    Button15.setIcon(new ImageIcon(hidden)); 
                }
                whatOpen = null;
                isOpen = false;
                noOpen = -1;
            }
            else{
                isOpen = true;
                noOpen = x[14];
                whatOpen = Button15;
            }
        }
    }//GEN-LAST:event_Button15ActionPerformed

    private void Button16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button16ActionPerformed
        if(whatOpen != Button16){
            Button16.setIcon(new ImageIcon(photos[x[15]]));
            frame.update(getGraphics());
            time(500);
            if(isOpen){
                if(noOpen == x[15]){
                    Home.audioClip3.loop(1);
                    Home.audioClip3.start();
                    whatOpen.setVisible(false);
                    Button16.setVisible(false);
                    count += 2;
                    if(count == 32){
                        Home.audioClip2.loop(1);
                        Home.audioClip2.start();
                        WinningHard.score.setText(String.valueOf(score*score*score));
                        WinningHard.main(null);
                        frame.setVisible(false);
                        if((score*score*score) > scoreFile){
                            try {
                                output = new PrintWriter(Home.scoreHard);
                            } catch (FileNotFoundException ex) {
                                Logger.getLogger(HardLevel.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            output.print(score*score*score);
                            output.close();
                        }
                    }
                }
                else{
                    whatOpen.setIcon(new ImageIcon(hidden));
                    Button16.setIcon(new ImageIcon(hidden)); 
                }
                whatOpen = null;
                isOpen = false;
                noOpen = -1;
            }
            else{
                isOpen = true;
                noOpen = x[15];
                whatOpen = Button16;
            }
        }
    }//GEN-LAST:event_Button16ActionPerformed

    private void Button17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button17ActionPerformed
        if(whatOpen != Button17){
            Button17.setIcon(new ImageIcon(photos[x[16]]));
            frame.update(getGraphics());
            time(500);
            if(isOpen){
                if(noOpen == x[16]){
                    Home.audioClip3.loop(1);
                    Home.audioClip3.start();
                    whatOpen.setVisible(false);
                    Button17.setVisible(false);
                    count += 2;
                    if(count == 32){
                        Home.audioClip2.loop(1);
                        Home.audioClip2.start();
                        WinningHard.score.setText(String.valueOf(score*score*score));
                        WinningHard.main(null);
                        frame.setVisible(false);
                        if((score*score*score) > scoreFile){
                            try {
                                output = new PrintWriter(Home.scoreHard);
                            } catch (FileNotFoundException ex) {
                                Logger.getLogger(HardLevel.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            output.print(score*score*score);
                            output.close();
                        }
                    }
                }
                else{
                    whatOpen.setIcon(new ImageIcon(hidden));
                    Button17.setIcon(new ImageIcon(hidden)); 
                }
                whatOpen = null;
                isOpen = false;
                noOpen = -1;
            }
            else{
                isOpen = true;
                noOpen = x[16];
                whatOpen = Button17;
            }
        }
    }//GEN-LAST:event_Button17ActionPerformed

    private void Button18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button18ActionPerformed
        if(whatOpen != Button18){
            Button18.setIcon(new ImageIcon(photos[x[17]]));
            frame.update(getGraphics());
            time(500);
            if(isOpen){
                if(noOpen == x[17]){
                    Home.audioClip3.loop(1);
                    Home.audioClip3.start();
                    whatOpen.setVisible(false);
                    Button18.setVisible(false);
                    count += 2;
                    if(count == 32){
                        Home.audioClip2.loop(1);
                        Home.audioClip2.start();
                        WinningHard.score.setText(String.valueOf(score*score*score));
                        WinningHard.main(null);
                        frame.setVisible(false);
                        if((score*score*score) > scoreFile){
                            try {
                                output = new PrintWriter(Home.scoreHard);
                            } catch (FileNotFoundException ex) {
                                Logger.getLogger(HardLevel.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            output.print(score*score*score);
                            output.close();
                        }
                    }
                }
                else{
                    whatOpen.setIcon(new ImageIcon(hidden));
                    Button18.setIcon(new ImageIcon(hidden)); 
                }
                whatOpen = null;
                isOpen = false;
                noOpen = -1;
            }
            else{
                isOpen = true;
                noOpen = x[17];
                whatOpen = Button18;
            }
        }
    }//GEN-LAST:event_Button18ActionPerformed

    private void Button19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button19ActionPerformed
        if(whatOpen != Button19){
            Button19.setIcon(new ImageIcon(photos[x[18]]));
            frame.update(getGraphics());
            time(500);
            if(isOpen){
                if(noOpen == x[18]){
                    Home.audioClip3.loop(1);
                    Home.audioClip3.start();
                    whatOpen.setVisible(false);
                    Button19.setVisible(false);
                    count += 2;
                    if(count == 32){
                        Home.audioClip2.loop(1);
                        Home.audioClip2.start();
                        WinningHard.score.setText(String.valueOf(score*score*score));
                        WinningHard.main(null);
                        frame.setVisible(false);
                        if((score*score*score) > scoreFile){
                            try {
                                output = new PrintWriter(Home.scoreHard);
                            } catch (FileNotFoundException ex) {
                                Logger.getLogger(HardLevel.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            output.print(score*score*score);
                            output.close();
                        }
                    }
                }
                else{
                    whatOpen.setIcon(new ImageIcon(hidden));
                    Button19.setIcon(new ImageIcon(hidden)); 
                }
                whatOpen = null;
                isOpen = false;
                noOpen = -1;
            }
            else{
                isOpen = true;
                noOpen = x[18];
                whatOpen = Button19;
            }
        }
    }//GEN-LAST:event_Button19ActionPerformed

    private void Button20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button20ActionPerformed
        if(whatOpen != Button20){
            Button20.setIcon(new ImageIcon(photos[x[19]]));
            frame.update(getGraphics());
            time(500);
            if(isOpen){
                if(noOpen == x[19]){
                    Home.audioClip3.loop(1);
                    Home.audioClip3.start();
                    whatOpen.setVisible(false);
                    Button20.setVisible(false);
                    count += 2;
                    if(count == 32){
                        Home.audioClip2.loop(1);
                        Home.audioClip2.start();
                        WinningHard.score.setText(String.valueOf(score*score*score));
                        WinningHard.main(null);
                        frame.setVisible(false);
                        if((score*score*score) > scoreFile){
                            try {
                                output = new PrintWriter(Home.scoreHard);
                            } catch (FileNotFoundException ex) {
                                Logger.getLogger(HardLevel.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            output.print(score*score*score);
                            output.close();
                        }
                    }
                }
                else{
                    whatOpen.setIcon(new ImageIcon(hidden));
                    Button20.setIcon(new ImageIcon(hidden)); 
                }
                whatOpen = null;
                isOpen = false;
                noOpen = -1;
            }
            else{
                isOpen = true;
                noOpen = x[19];
                whatOpen = Button20;
            }
        }
    }//GEN-LAST:event_Button20ActionPerformed

    private void Button21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button21ActionPerformed
        if(whatOpen != Button21){
            Button21.setIcon(new ImageIcon(photos[x[20]]));
            frame.update(getGraphics());
            time(500);
            if(isOpen){
                if(noOpen == x[20]){
                    Home.audioClip3.loop(1);
                    Home.audioClip3.start();
                    whatOpen.setVisible(false);
                    Button21.setVisible(false);
                    count += 2;
                    if(count == 32){
                        Home.audioClip2.loop(1);
                        Home.audioClip2.start();
                        WinningHard.score.setText(String.valueOf(score*score*score));
                        WinningHard.main(null);
                        frame.setVisible(false);
                        if((score*score*score) > scoreFile){
                            try {
                                output = new PrintWriter(Home.scoreHard);
                            } catch (FileNotFoundException ex) {
                                Logger.getLogger(HardLevel.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            output.print(score*score*score);
                            output.close();
                        }
                    }
                }
                else{
                    whatOpen.setIcon(new ImageIcon(hidden));
                    Button21.setIcon(new ImageIcon(hidden)); 
                }
                whatOpen = null;
                isOpen = false;
                noOpen = -1;
            }
            else{
                isOpen = true;
                noOpen = x[20];
                whatOpen = Button21;
            }
        }
    }//GEN-LAST:event_Button21ActionPerformed

    private void Button22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button22ActionPerformed
        if(whatOpen != Button22){
            Button22.setIcon(new ImageIcon(photos[x[21]]));
            frame.update(getGraphics());
            time(500);
            if(isOpen){
                if(noOpen == x[21]){
                    Home.audioClip3.loop(1);
                    Home.audioClip3.start();
                    whatOpen.setVisible(false);
                    Button22.setVisible(false);
                    count += 2;
                    if(count == 32){
                        Home.audioClip2.loop(1);
                        Home.audioClip2.start();
                        WinningHard.score.setText(String.valueOf(score*score*score));
                        WinningHard.main(null);
                        frame.setVisible(false);
                        if((score*score*score) > scoreFile){
                            try {
                                output = new PrintWriter(Home.scoreHard);
                            } catch (FileNotFoundException ex) {
                                Logger.getLogger(HardLevel.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            output.print(score*score*score);
                            output.close();
                        }
                    }
                }
                else{
                    whatOpen.setIcon(new ImageIcon(hidden));
                    Button22.setIcon(new ImageIcon(hidden)); 
                }
                whatOpen = null;
                isOpen = false;
                noOpen = -1;
            }
            else{
                isOpen = true;
                noOpen = x[21];
                whatOpen = Button22;
            }
        }
    }//GEN-LAST:event_Button22ActionPerformed

    private void Button23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button23ActionPerformed
        if(whatOpen != Button23){
            Button23.setIcon(new ImageIcon(photos[x[22]]));
            frame.update(getGraphics());
            time(500);
            if(isOpen){
                if(noOpen == x[22]){
                    Home.audioClip3.loop(1);
                    Home.audioClip3.start();
                    whatOpen.setVisible(false);
                    Button23.setVisible(false);
                    count += 2;
                    if(count == 32){
                        Home.audioClip2.loop(1);
                        Home.audioClip2.start();
                        WinningHard.score.setText(String.valueOf(score*score*score));
                        WinningHard.main(null);
                        frame.setVisible(false);
                        if((score*score*score) > scoreFile){
                            try {
                                output = new PrintWriter(Home.scoreHard);
                            } catch (FileNotFoundException ex) {
                                Logger.getLogger(HardLevel.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            output.print(score*score*score);
                            output.close();
                        }
                    }
                }
                else{
                    whatOpen.setIcon(new ImageIcon(hidden));
                    Button23.setIcon(new ImageIcon(hidden)); 
                }
                whatOpen = null;
                isOpen = false;
                noOpen = -1;
            }
            else{
                isOpen = true;
                noOpen = x[22];
                whatOpen = Button23;
            }
        }
    }//GEN-LAST:event_Button23ActionPerformed

    private void Button24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button24ActionPerformed
        if(whatOpen != Button24){
            Button24.setIcon(new ImageIcon(photos[x[23]]));
            frame.update(getGraphics());
            time(500);
            if(isOpen){
                if(noOpen == x[23]){
                    Home.audioClip3.loop(1);
                    Home.audioClip3.start();
                    whatOpen.setVisible(false);
                    Button24.setVisible(false);
                    count += 2;
                    if(count == 32){
                        Home.audioClip2.loop(1);
                        Home.audioClip2.start();
                        WinningHard.score.setText(String.valueOf(score*score*score));
                        WinningHard.main(null);
                        frame.setVisible(false);
                        if((score*score*score) > scoreFile){
                            try {
                                output = new PrintWriter(Home.scoreHard);
                            } catch (FileNotFoundException ex) {
                                Logger.getLogger(HardLevel.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            output.print(score*score*score);
                            output.close();
                        }
                    }
                }
                else{
                    whatOpen.setIcon(new ImageIcon(hidden));
                    Button24.setIcon(new ImageIcon(hidden)); 
                }
                whatOpen = null;
                isOpen = false;
                noOpen = -1;
            }
            else{
                isOpen = true;
                noOpen = x[23];
                whatOpen = Button24;
            }
        }
    }//GEN-LAST:event_Button24ActionPerformed

    private void Button25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button25ActionPerformed
        if(whatOpen != Button25){
            Button25.setIcon(new ImageIcon(photos[x[24]]));
            frame.update(getGraphics());
            time(500);
            if(isOpen){
                if(noOpen == x[24]){
                    Home.audioClip3.loop(1);
                    Home.audioClip3.start();
                    whatOpen.setVisible(false);
                    Button25.setVisible(false);
                    count += 2;
                    if(count == 32){
                        Home.audioClip2.loop(1);
                        Home.audioClip2.start();
                        WinningHard.score.setText(String.valueOf(score*score*score));
                        WinningHard.main(null);
                        frame.setVisible(false);
                        if((score*score*score) > scoreFile){
                            try {
                                output = new PrintWriter(Home.scoreHard);
                            } catch (FileNotFoundException ex) {
                                Logger.getLogger(HardLevel.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            output.print(score*score*score);
                            output.close();
                        }
                    }
                }
                else{
                    whatOpen.setIcon(new ImageIcon(hidden));
                    Button25.setIcon(new ImageIcon(hidden)); 
                }
                whatOpen = null;
                isOpen = false;
                noOpen = -1;
            }
            else{
                isOpen = true;
                noOpen = x[24];
                whatOpen = Button25;
            }
        }
    }//GEN-LAST:event_Button25ActionPerformed

    private void Button26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button26ActionPerformed
        if(whatOpen != Button26){
            Button26.setIcon(new ImageIcon(photos[x[25]]));
            frame.update(getGraphics());
            time(500);
            if(isOpen){
                if(noOpen == x[25]){
                    Home.audioClip3.loop(1);
                    Home.audioClip3.start();
                    whatOpen.setVisible(false);
                    Button26.setVisible(false);
                    count += 2;
                    if(count == 32){
                        Home.audioClip2.loop(1);
                        Home.audioClip2.start();
                        WinningHard.score.setText(String.valueOf(score*score*score));
                        WinningHard.main(null);
                        frame.setVisible(false);
                        if((score*score*score) > scoreFile){
                            try {
                                output = new PrintWriter(Home.scoreHard);
                            } catch (FileNotFoundException ex) {
                                Logger.getLogger(HardLevel.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            output.print(score*score*score);
                            output.close();
                        }
                    }
                }
                else{
                    whatOpen.setIcon(new ImageIcon(hidden));
                    Button26.setIcon(new ImageIcon(hidden)); 
                }
                whatOpen = null;
                isOpen = false;
                noOpen = -1;
            }
            else{
                isOpen = true;
                noOpen = x[25];
                whatOpen = Button26;
            }
        }
    }//GEN-LAST:event_Button26ActionPerformed

    private void Button27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button27ActionPerformed
        if(whatOpen != Button27){
            Button27.setIcon(new ImageIcon(photos[x[26]]));
            frame.update(getGraphics());
            time(500);
            if(isOpen){
                if(noOpen == x[26]){
                    Home.audioClip3.loop(1);
                    Home.audioClip3.start();
                    whatOpen.setVisible(false);
                    Button27.setVisible(false);
                    count += 2;
                    if(count == 32){
                        Home.audioClip2.loop(1);
                        Home.audioClip2.start();
                        WinningHard.score.setText(String.valueOf(score*score*score));
                        WinningHard.main(null);
                        frame.setVisible(false);
                        if((score*score*score) > scoreFile){
                            try {
                                output = new PrintWriter(Home.scoreHard);
                            } catch (FileNotFoundException ex) {
                                Logger.getLogger(HardLevel.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            output.print(score*score*score);
                            output.close();
                        }
                    }
                }
                else{
                    whatOpen.setIcon(new ImageIcon(hidden));
                    Button27.setIcon(new ImageIcon(hidden)); 
                }
                whatOpen = null;
                isOpen = false;
                noOpen = -1;
            }
            else{
                isOpen = true;
                noOpen = x[26];
                whatOpen = Button27;
            }
        }
    }//GEN-LAST:event_Button27ActionPerformed

    private void Button28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button28ActionPerformed
        if(whatOpen != Button28){
            Button28.setIcon(new ImageIcon(photos[x[27]]));
            frame.update(getGraphics());
            time(500);
            if(isOpen){
                if(noOpen == x[27]){
                    Home.audioClip3.loop(1);
                    Home.audioClip3.start();
                    whatOpen.setVisible(false);
                    Button28.setVisible(false);
                    count += 2;
                    if(count == 32){
                        Home.audioClip2.loop(1);
                        Home.audioClip2.start();
                        WinningHard.score.setText(String.valueOf(score*score*score));
                        WinningHard.main(null);
                        frame.setVisible(false);
                        if((score*score*score) > scoreFile){
                            try {
                                output = new PrintWriter(Home.scoreHard);
                            } catch (FileNotFoundException ex) {
                                Logger.getLogger(HardLevel.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            output.print(score*score*score);
                            output.close();
                        }
                    }
                }
                else{
                    whatOpen.setIcon(new ImageIcon(hidden));
                    Button28.setIcon(new ImageIcon(hidden)); 
                }
                whatOpen = null;
                isOpen = false;
                noOpen = -1;
            }
            else{
                isOpen = true;
                noOpen = x[27];
                whatOpen = Button28;
            }
        }
    }//GEN-LAST:event_Button28ActionPerformed

    private void Button29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button29ActionPerformed
        if(whatOpen != Button29){
            Button29.setIcon(new ImageIcon(photos[x[28]]));
            frame.update(getGraphics());
            time(500);
            if(isOpen){
                if(noOpen == x[28]){
                    Home.audioClip3.loop(1);
                    Home.audioClip3.start();
                    whatOpen.setVisible(false);
                    Button29.setVisible(false);
                    count += 2;
                    if(count == 32){
                        Home.audioClip2.loop(1);
                        Home.audioClip2.start();
                        WinningHard.score.setText(String.valueOf(score*score*score));
                        WinningHard.main(null);
                        frame.setVisible(false);
                        if((score*score*score) > scoreFile){
                            try {
                                output = new PrintWriter(Home.scoreHard);
                            } catch (FileNotFoundException ex) {
                                Logger.getLogger(HardLevel.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            output.print(score*score*score);
                            output.close();
                        }
                    }
                }
                else{
                    whatOpen.setIcon(new ImageIcon(hidden));
                    Button29.setIcon(new ImageIcon(hidden)); 
                }
                whatOpen = null;
                isOpen = false;
                noOpen = -1;
            }
            else{
                isOpen = true;
                noOpen = x[28];
                whatOpen = Button29;
            }
        }
    }//GEN-LAST:event_Button29ActionPerformed

    private void Button30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button30ActionPerformed
        if(whatOpen != Button30){
            Button30.setIcon(new ImageIcon(photos[x[29]]));
            frame.update(getGraphics());
            time(500);
            if(isOpen){
                if(noOpen == x[29]){
                    Home.audioClip3.loop(1);
                    Home.audioClip3.start();
                    whatOpen.setVisible(false);
                    Button30.setVisible(false);
                    count += 2;
                    if(count == 32){
                        Home.audioClip2.loop(1);
                        Home.audioClip2.start();
                        WinningHard.score.setText(String.valueOf(score*score*score));
                        WinningHard.main(null);
                        frame.setVisible(false);
                        if((score*score*score) > scoreFile){
                            try {
                                output = new PrintWriter(Home.scoreHard);
                            } catch (FileNotFoundException ex) {
                                Logger.getLogger(HardLevel.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            output.print(score*score*score);
                            output.close();
                        }
                    }
                }
                else{
                    whatOpen.setIcon(new ImageIcon(hidden));
                    Button30.setIcon(new ImageIcon(hidden)); 
                }
                whatOpen = null;
                isOpen = false;
                noOpen = -1;
            }
            else{
                isOpen = true;
                noOpen = x[29];
                whatOpen = Button30;
            }
        }
    }//GEN-LAST:event_Button30ActionPerformed

    private void Button31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button31ActionPerformed
        if(whatOpen != Button31){
            Button31.setIcon(new ImageIcon(photos[x[30]]));
            frame.update(getGraphics());
            time(500);
            if(isOpen){
                if(noOpen == x[30]){
                    Home.audioClip3.loop(1);
                    Home.audioClip3.start();
                    whatOpen.setVisible(false);
                    Button31.setVisible(false);
                    count += 2;
                    if(count == 32){
                        Home.audioClip2.loop(1);
                        Home.audioClip2.start();
                        WinningHard.score.setText(String.valueOf(score*score*score));
                        WinningHard.main(null);
                        frame.setVisible(false);
                        if((score*score*score) > scoreFile){
                            try {
                                output = new PrintWriter(Home.scoreHard);
                            } catch (FileNotFoundException ex) {
                                Logger.getLogger(HardLevel.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            output.print(score*score*score);
                            output.close();
                        }
                    }
                }
                else{
                    whatOpen.setIcon(new ImageIcon(hidden));
                    Button31.setIcon(new ImageIcon(hidden)); 
                }
                whatOpen = null;
                isOpen = false;
                noOpen = -1;
            }
            else{
                isOpen = true;
                noOpen = x[30];
                whatOpen = Button31;
            }
        }
    }//GEN-LAST:event_Button31ActionPerformed

    private void Button32ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button32ActionPerformed
        if(whatOpen != Button32){
            Button32.setIcon(new ImageIcon(photos[x[31]]));
            frame.update(getGraphics());
            time(500);
            if(isOpen){
                if(noOpen == x[31]){
                    Home.audioClip3.loop(1);
                    Home.audioClip3.start();
                    whatOpen.setVisible(false);
                    Button32.setVisible(false);
                    count += 2;
                    if(count == 32){
                        Home.audioClip2.loop(1);
                        Home.audioClip2.start();
                        WinningHard.score.setText(String.valueOf(score*score*score));
                        WinningHard.main(null);
                        frame.setVisible(false);
                        if((score*score*score) > scoreFile){
                            try {
                                output = new PrintWriter(Home.scoreHard);
                            } catch (FileNotFoundException ex) {
                                Logger.getLogger(HardLevel.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            output.print(score*score*score);
                            output.close();
                        }
                    }
                }
                else{
                    whatOpen.setIcon(new ImageIcon(hidden));
                    Button32.setIcon(new ImageIcon(hidden)); 
                }
                whatOpen = null;
                isOpen = false;
                noOpen = -1;
            }
            else{
                isOpen = true;
                noOpen = x[31];
                whatOpen = Button32;
            }
        }
    }//GEN-LAST:event_Button32ActionPerformed

    private static void time(double time){
        double end = System.currentTimeMillis() + time;
        while(System.currentTimeMillis() < end){
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws FileNotFoundException {
        scannerHard = new Scanner(Home.scoreHard);
        scoreFile = scannerHard.nextInt();
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                frame.setVisible(true);
                frame.setTitle("Memory Game");
                frame.setSize(1366, 768);
                frame.setLocationRelativeTo(null);
                frame.setResizable(false);
                Button1.setIcon(new ImageIcon(photos[(int)indexs.get(0)-1]));
                x[0] = (int)indexs.get(0)-1;
                Button2.setIcon(new ImageIcon(photos[(int)indexs.get(1)-1]));
                x[1] = (int)indexs.get(1)-1;
                Button3.setIcon(new ImageIcon(photos[(int)indexs.get(2)-1]));
                x[2] = (int)indexs.get(2)-1;
                Button4.setIcon(new ImageIcon(photos[(int)indexs.get(3)-1]));
                x[3] = (int)indexs.get(3)-1;
                Button5.setIcon(new ImageIcon(photos[(int)indexs.get(4)-1]));
                x[4] = (int)indexs.get(4)-1;
                Button6.setIcon(new ImageIcon(photos[(int)indexs.get(5)-1]));
                x[5] = (int)indexs.get(5)-1;
                Button7.setIcon(new ImageIcon(photos[(int)indexs.get(6)-1]));
                x[6] = (int)indexs.get(6)-1;
                Button8.setIcon(new ImageIcon(photos[(int)indexs.get(7)-1]));
                x[7] = (int)indexs.get(7)-1;
                Button9.setIcon(new ImageIcon(photos[(int)indexs.get(8)-1]));
                x[8] = (int)indexs.get(8)-1;
                Button10.setIcon(new ImageIcon(photos[(int)indexs.get(9)-1]));
                x[9] = (int)indexs.get(9)-1;
                Button11.setIcon(new ImageIcon(photos[(int)indexs.get(10)-1]));
                x[10] = (int)indexs.get(10)-1;
                Button12.setIcon(new ImageIcon(photos[(int)indexs.get(11)-1]));
                x[11] = (int)indexs.get(11)-1;
                Button13.setIcon(new ImageIcon(photos[(int)indexs.get(12)-1]));
                x[12] = (int)indexs.get(12)-1;
                Button14.setIcon(new ImageIcon(photos[(int)indexs.get(13)-1]));
                x[13] = (int)indexs.get(13)-1;
                Button15.setIcon(new ImageIcon(photos[(int)indexs.get(14)-1]));
                x[14] = (int)indexs.get(14)-1;
                Button16.setIcon(new ImageIcon(photos[(int)indexs.get(15)-1]));
                x[15] = (int)indexs.get(15)-1;
                Button17.setIcon(new ImageIcon(photos[(int)indexs.get(16)-1]));
                x[16] = (int)indexs.get(16)-1;
                Button18.setIcon(new ImageIcon(photos[(int)indexs.get(17)-1]));
                x[17] = (int)indexs.get(17)-1;
                Button19.setIcon(new ImageIcon(photos[(int)indexs.get(18)-1]));
                x[18] = (int)indexs.get(18)-1;
                Button20.setIcon(new ImageIcon(photos[(int)indexs.get(19)-1]));
                x[19] = (int)indexs.get(19)-1;
                Button21.setIcon(new ImageIcon(photos[(int)indexs.get(20)-1]));
                x[20] = (int)indexs.get(20)-1;
                Button22.setIcon(new ImageIcon(photos[(int)indexs.get(21)-1]));
                x[21] = (int)indexs.get(21)-1;
                Button23.setIcon(new ImageIcon(photos[(int)indexs.get(22)-1]));
                x[22] = (int)indexs.get(22)-1;
                Button24.setIcon(new ImageIcon(photos[(int)indexs.get(23)-1]));
                x[23] = (int)indexs.get(23)-1;
                Button25.setIcon(new ImageIcon(photos[(int)indexs.get(24)-1]));
                x[24] = (int)indexs.get(24)-1;
                Button26.setIcon(new ImageIcon(photos[(int)indexs.get(25)-1]));
                x[25] = (int)indexs.get(25)-1;
                Button27.setIcon(new ImageIcon(photos[(int)indexs.get(26)-1]));
                x[26] = (int)indexs.get(26)-1;
                Button28.setIcon(new ImageIcon(photos[(int)indexs.get(27)-1]));
                x[27] = (int)indexs.get(27)-1;
                Button29.setIcon(new ImageIcon(photos[(int)indexs.get(28)-1]));
                x[28] = (int)indexs.get(28)-1;
                Button30.setIcon(new ImageIcon(photos[(int)indexs.get(29)-1]));
                x[29] = (int)indexs.get(29)-1;
                Button31.setIcon(new ImageIcon(photos[(int)indexs.get(30)-1]));
                x[30] = (int)indexs.get(30)-1;
                Button32.setIcon(new ImageIcon(photos[(int)indexs.get(31)-1]));
                x[31] = (int)indexs.get(31)-1;
                if(Home.mute){
                    ImageIcon image = new ImageIcon(getClass().getResource("/Sound/mute(1).png"));
                    sound.setIcon(image);
                }
            }
        });
        time(4500);
        Button1.setIcon(new ImageIcon(hidden));
        Button2.setIcon(new ImageIcon(hidden));
        Button3.setIcon(new ImageIcon(hidden));
        Button4.setIcon(new ImageIcon(hidden));
        Button5.setIcon(new ImageIcon(hidden));
        Button6.setIcon(new ImageIcon(hidden));
        Button7.setIcon(new ImageIcon(hidden));
        Button8.setIcon(new ImageIcon(hidden));
        Button9.setIcon(new ImageIcon(hidden));
        Button10.setIcon(new ImageIcon(hidden));
        Button11.setIcon(new ImageIcon(hidden));
        Button12.setIcon(new ImageIcon(hidden));
        Button13.setIcon(new ImageIcon(hidden));
        Button14.setIcon(new ImageIcon(hidden));
        Button15.setIcon(new ImageIcon(hidden));
        Button16.setIcon(new ImageIcon(hidden));
        Button17.setIcon(new ImageIcon(hidden));
        Button18.setIcon(new ImageIcon(hidden));
        Button19.setIcon(new ImageIcon(hidden));
        Button20.setIcon(new ImageIcon(hidden));
        Button21.setIcon(new ImageIcon(hidden));
        Button22.setIcon(new ImageIcon(hidden));
        Button23.setIcon(new ImageIcon(hidden));
        Button24.setIcon(new ImageIcon(hidden));
        Button25.setIcon(new ImageIcon(hidden));
        Button26.setIcon(new ImageIcon(hidden));
        Button27.setIcon(new ImageIcon(hidden));
        Button28.setIcon(new ImageIcon(hidden));
        Button29.setIcon(new ImageIcon(hidden));
        Button30.setIcon(new ImageIcon(hidden));
        Button31.setIcon(new ImageIcon(hidden));
        Button32.setIcon(new ImageIcon(hidden));
        for(int i=9, j=9 ; j>=0 ; ){
            if(frame.isActive())
                i--;
            if(i < 0)
                break;
            if(j==0 && frame.isActive()){
                digit0.setIcon(new ImageIcon(lastNumbers[i]));
                digit1.setIcon(new ImageIcon(lastNumbers[j]));
                score--;
                for(int k=0 ; k<4 ; k++){
                    time(250);
                    clock.setIcon(new ImageIcon(lastClocks[k]));
                }
            }
            else if(frame.isActive()){
                digit0.setIcon(new ImageIcon(numbers[i]));
                digit1.setIcon(new ImageIcon(numbers[j]));
                score--;
                for(int k=0 ; k<4 ; k++){
                    time(250);
                    clock.setIcon(new ImageIcon(clocks[k]));
                }
                if(i == 0){
                    i = 10;
                    j--;
                }
            }
        }
        Losing.from = "Level3";
        Losing.main(null);
        Home.audioClip4.loop(1);
        Home.audioClip4.start();
        frame.setVisible(false);
        frame = new HardLevel();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JButton Button1;
    private static javax.swing.JButton Button10;
    private static javax.swing.JButton Button11;
    private static javax.swing.JButton Button12;
    private static javax.swing.JButton Button13;
    private static javax.swing.JButton Button14;
    private static javax.swing.JButton Button15;
    private static javax.swing.JButton Button16;
    private static javax.swing.JButton Button17;
    private static javax.swing.JButton Button18;
    private static javax.swing.JButton Button19;
    private static javax.swing.JButton Button2;
    private static javax.swing.JButton Button20;
    private static javax.swing.JButton Button21;
    private static javax.swing.JButton Button22;
    private static javax.swing.JButton Button23;
    private static javax.swing.JButton Button24;
    private static javax.swing.JButton Button25;
    private static javax.swing.JButton Button26;
    private static javax.swing.JButton Button27;
    private static javax.swing.JButton Button28;
    private static javax.swing.JButton Button29;
    private static javax.swing.JButton Button3;
    private static javax.swing.JButton Button30;
    private static javax.swing.JButton Button31;
    private static javax.swing.JButton Button32;
    private static javax.swing.JButton Button4;
    private static javax.swing.JButton Button5;
    private static javax.swing.JButton Button6;
    private static javax.swing.JButton Button7;
    private static javax.swing.JButton Button8;
    private static javax.swing.JButton Button9;
    private javax.swing.JButton backButton;
    private javax.swing.JLabel background;
    private static javax.swing.JButton clock;
    private static javax.swing.JButton digit0;
    private static javax.swing.JButton digit1;
    private javax.swing.JButton pauseButton;
    private static javax.swing.JButton sound;
    // End of variables declaration//GEN-END:variables
    private static final Logger LOG = Logger.getLogger(HardLevel.class.getName());
}
